layout: single
title:  "파이썬 zip() 알아보기"
---

# zip()

zip(*iterable) 은 동일한 개수로 이루어진 자료형을 묶어 주는 역할을 하는 함수이다.

*iterable은 반복 가능(iterable)한 자료형 여러 개를 입력할 수 있다는 의미.

```python
>>>list(zip([1, 2, 3], [4, 5, 6]))
[(1, 4), (2, 5), (3, 6)]

>>>list(zip([1, 2, 3], [4, 5, 6], [7, 8, 9]))
[(1, 4, 7), (2, 5, 8), (3, 6, 9)]

>>>list(zip("abc","def"))
[('a', 'd'), ('b', 'e'), ('c', 'f')]
```

```python
fruit = ['apple', 'banana', 'orange']
price = [500, 700, 200]
print(zip(fruit, price))
>> 출력 : <zip object at 0x0000021545E93080>

print(*zip(fruit, price)) #unpack하여 zip 객체 내용물을 출력
>> 출력 : ('apple', 500) ('banana', 700) ('orange', 200)
```

zip(리스트1, 리스트2) 함수가 2개 리스트의 요소를 순차적으로 엮어서 새로운 리스트를 만들 수 있다. 

위의 zip() 함수로 dict 형 데이터도 쉽게 만들 수 있다. 이런 여러 리스트의 데이터를 요소 순서를 고려하여 순차적으로 묶어주는 데이터를 만들 때 zip() 함수가 매우 유용하게 사용 된다.

```python
fruit_price = dict(zip(fruit, price))
print(fruit_price)
>> 출력 : {'apple': 500, 'banana': 700, 'orange': 200}

print(fruit_price['apple'])
>> 출력 : 500
```

응용

```python
#1. 2개의 리스트를 zip 하여 dict 생성
```
